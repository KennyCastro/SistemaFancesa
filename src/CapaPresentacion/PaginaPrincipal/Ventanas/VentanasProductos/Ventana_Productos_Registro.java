/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package CapaPresentacion.PaginaPrincipal.Ventanas.VentanasProductos;
import CapaDatos.Almacen.datosProductoAlmacen;
import CapaDatos.Almacen.datosTipoProducto;
import CapaDatos.Almacen.datosUnidadProducto;
import CapaDatos.Usuarios_Personal.datosPersonalCocina;
import CapaLogica.Almacen.conexionProductoAlmacen;
import com.toedter.calendar.JCalendar;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.time.LocalDate;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JComponent;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import static CapaPresentacion.PaginaPrincipal.Ventanas.Ventana_Principal.idProducto;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import javax.imageio.ImageIO;
import static CapaLogica.Usuarios_Personal.conexionPersonalCocina.persona;
import static CapaLogica.Almacen.conexionProductoAlmacen.tipoProducto;
import static CapaLogica.Almacen.conexionProductoAlmacen.unidadProducto;
import CapaLogica.ExpresionesRegulares;
import CapaPresentacion.PaginaPrincipal.Ventanas.Ventana_Inventario;
import CapaPresentacion.PaginaPrincipal.Ventanas.Ventana_Principal;
import static CapaPresentacion.PaginaPrincipal.main.Principal.containerVentanas;
import java.io.File;
import java.io.FileInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.math.BigDecimal;
import java.util.Date;
import java.time.ZoneId;
import java.time.LocalDate;
import static CapaPresentacion.PaginaPrincipal.main.Principal.principalVentana;
import static CapaPresentacion.PaginaPrincipal.main.Principal.inventario;
import java.awt.Graphics;
import static CapaPresentacion.PaginaPrincipal.Ventanas.Ventana_Principal.acciones;


/**
 *
 * @author KENNY
 */
public class Ventana_Productos_Registro extends javax.swing.JFrame {

     int xMouse,  yMouse;
     String rutaImage = "";
     String porSi="";
     SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
  ExpresionesRegulares expresiones= new ExpresionesRegulares();
     public static String accion = "crear";
     
     
     
    public Ventana_Productos_Registro() {
        initComponents();
        centrarPantalla();
        inhabilitar();
        mostrarTipoProductos();
        mostrarUnidadProductos();
        mostrarRegistrantes();
        IniciarId();
        
    }

    
     private void centrarPantalla() {
        Dimension tamanioVentana = getSize();
        Dimension tamanioPantalla = Toolkit.getDefaultToolkit().getScreenSize();
        int ejeX = (tamanioPantalla.width-tamanioVentana.width) / 2;
        int ejeY = (tamanioPantalla.height-tamanioVentana.height) / 2;
        
        setLocation(ejeX, ejeY);
        
        //esto es para tener una vista mas a lo windows 10
       
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        vent_Inicial_Productos1 = new CapaPresentacion.PaginaPrincipal.Ventanas.VentanasProductos.Vent_Inicial_Productos();
        calendar = new com.toedter.calendar.JCalendar();
        cajafotoP = new javax.swing.JLabel();
        btnSubir = new javax.swing.JButton();
        btnEliminarFoto = new javax.swing.JButton();
        txtId = new javax.swing.JLabel();
        cajaId = new javax.swing.JTextField();
        txtProducto = new javax.swing.JLabel();
        cajaProducto = new javax.swing.JTextField();
        txtTipo = new javax.swing.JLabel();
        cajaTipo = new javax.swing.JComboBox<>();
        txtCantidad = new javax.swing.JLabel();
        cajaCantidad = new javax.swing.JSpinner();
        txtUnidad = new javax.swing.JLabel();
        cajaUnidad = new javax.swing.JComboBox<>();
        txtPrCompra = new javax.swing.JLabel();
        cajaPrCompra = new javax.swing.JTextField();
        txtPrVenta = new javax.swing.JLabel();
        cajaPrVenta = new javax.swing.JTextField();
        txtRegistrante = new javax.swing.JLabel();
        cajaRegistrante = new javax.swing.JComboBox<>();
        btnGuardar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        txtVencimiento = new javax.swing.JLabel();
        cajaVencimiento = new javax.swing.JTextField();
        btnCalendar = new javax.swing.JButton();
        Header = new javax.swing.JPanel();
        btnExit = new javax.swing.JPanel();
        txtExit = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        vent_Inicial_Productos1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        calendar.setForeground(new java.awt.Color(51, 51, 51));
        calendar.setOpaque(false);
        calendar.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                calendarPropertyChange(evt);
            }
        });
        vent_Inicial_Productos1.add(calendar, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 350, -1, -1));

        cajafotoP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cajafotoP.setText("No hay foto");
        vent_Inicial_Productos1.add(cajafotoP, new org.netbeans.lib.awtextra.AbsoluteConstraints(38, 142, 203, 297));

        btnSubir.setBackground(new java.awt.Color(204, 204, 204));
        btnSubir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Files/incrementar.png"))); // NOI18N
        btnSubir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSubir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSubirMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSubirMouseExited(evt);
            }
        });
        btnSubir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubirActionPerformed(evt);
            }
        });
        vent_Inicial_Productos1.add(btnSubir, new org.netbeans.lib.awtextra.AbsoluteConstraints(56, 439, 72, -1));

        btnEliminarFoto.setBackground(new java.awt.Color(204, 204, 204));
        btnEliminarFoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Files/cancelar.png"))); // NOI18N
        btnEliminarFoto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminarFoto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnEliminarFotoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEliminarFotoMouseExited(evt);
            }
        });
        btnEliminarFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarFotoActionPerformed(evt);
            }
        });
        vent_Inicial_Productos1.add(btnEliminarFoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 439, 72, -1));

        txtId.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        txtId.setForeground(new java.awt.Color(255, 255, 255));
        txtId.setText("ID PRODUCTO");
        vent_Inicial_Productos1.add(txtId, new org.netbeans.lib.awtextra.AbsoluteConstraints(93, 74, -1, 28));

        cajaId.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        vent_Inicial_Productos1.add(cajaId, new org.netbeans.lib.awtextra.AbsoluteConstraints(69, 108, 130, 28));

        txtProducto.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        txtProducto.setForeground(new java.awt.Color(255, 255, 255));
        txtProducto.setText("PRODUCTO:");
        vent_Inicial_Productos1.add(txtProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(329, 142, -1, 28));
        vent_Inicial_Productos1.add(cajaProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(412, 142, 140, 28));

        txtTipo.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        txtTipo.setForeground(new java.awt.Color(255, 255, 255));
        txtTipo.setText("TIPO:");
        vent_Inicial_Productos1.add(txtTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(615, 142, -1, 28));

        cajaTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        vent_Inicial_Productos1.add(cajaTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(682, 142, 152, 28));

        txtCantidad.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        txtCantidad.setForeground(new java.awt.Color(255, 255, 255));
        txtCantidad.setText("CANTIDAD:");
        vent_Inicial_Productos1.add(txtCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(329, 229, 68, 28));
        vent_Inicial_Productos1.add(cajaCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(415, 232, 140, -1));

        txtUnidad.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        txtUnidad.setForeground(new java.awt.Color(255, 255, 255));
        txtUnidad.setText("UNIDAD:");
        vent_Inicial_Productos1.add(txtUnidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(597, 229, -1, 28));

        cajaUnidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        vent_Inicial_Productos1.add(cajaUnidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(682, 229, 152, 28));

        txtPrCompra.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        txtPrCompra.setForeground(new java.awt.Color(255, 255, 255));
        txtPrCompra.setText("PRECIO COMPRA:");
        vent_Inicial_Productos1.add(txtPrCompra, new org.netbeans.lib.awtextra.AbsoluteConstraints(329, 316, -1, 28));
        vent_Inicial_Productos1.add(cajaPrCompra, new org.netbeans.lib.awtextra.AbsoluteConstraints(444, 316, 121, 28));

        txtPrVenta.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        txtPrVenta.setForeground(new java.awt.Color(255, 255, 255));
        txtPrVenta.setText("PRECIO VENTA:");
        vent_Inicial_Productos1.add(txtPrVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(577, 316, -1, 28));
        vent_Inicial_Productos1.add(cajaPrVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(713, 316, 121, 28));

        txtRegistrante.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        txtRegistrante.setForeground(new java.awt.Color(255, 255, 255));
        txtRegistrante.setText("REGISTRANTE:");
        vent_Inicial_Productos1.add(txtRegistrante, new org.netbeans.lib.awtextra.AbsoluteConstraints(329, 468, -1, 28));

        cajaRegistrante.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        vent_Inicial_Productos1.add(cajaRegistrante, new org.netbeans.lib.awtextra.AbsoluteConstraints(444, 468, 390, 28));

        btnGuardar.setBackground(new java.awt.Color(0, 0, 0));
        btnGuardar.setFont(new java.awt.Font("Roboto Black", 1, 18)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Files/disquete.png"))); // NOI18N
        btnGuardar.setText("GUARDAR");
        btnGuardar.setBorderPainted(false);
        btnGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGuardar.setFocusPainted(false);
        btnGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnGuardarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnGuardarMouseExited(evt);
            }
        });
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        vent_Inicial_Productos1.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 70, 221, 43));

        btnEliminar.setBackground(new java.awt.Color(0, 0, 0));
        btnEliminar.setFont(new java.awt.Font("Roboto Black", 1, 18)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Files/eliminar-carpeta.png"))); // NOI18N
        btnEliminar.setText("ELIMINAR");
        btnEliminar.setBorderPainted(false);
        btnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminar.setFocusPainted(false);
        btnEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnEliminarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEliminarMouseExited(evt);
            }
        });
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        vent_Inicial_Productos1.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 70, 219, 43));

        txtVencimiento.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        txtVencimiento.setForeground(new java.awt.Color(255, 255, 255));
        txtVencimiento.setText("F. VENCIMIENTO:");
        vent_Inicial_Productos1.add(txtVencimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(329, 394, -1, 28));
        vent_Inicial_Productos1.add(cajaVencimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(444, 394, 131, 28));

        btnCalendar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Files/calendario.png"))); // NOI18N
        btnCalendar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalendarActionPerformed(evt);
            }
        });
        vent_Inicial_Productos1.add(btnCalendar, new org.netbeans.lib.awtextra.AbsoluteConstraints(593, 394, 49, 28));

        Header.setBackground(new java.awt.Color(255, 255, 255));
        Header.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                HeaderMouseDragged(evt);
            }
        });
        Header.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                HeaderMousePressed(evt);
            }
        });

        btnExit.setBackground(new java.awt.Color(255, 255, 255));

        txtExit.setBackground(new java.awt.Color(255, 255, 255));
        txtExit.setFont(new java.awt.Font("Roboto Black", 0, 24)); // NOI18N
        txtExit.setForeground(new java.awt.Color(0, 0, 0));
        txtExit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtExit.setText("X");
        txtExit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtExitMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtExitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtExitMouseExited(evt);
            }
        });

        javax.swing.GroupLayout btnExitLayout = new javax.swing.GroupLayout(btnExit);
        btnExit.setLayout(btnExitLayout);
        btnExitLayout.setHorizontalGroup(
            btnExitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtExit, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
        );
        btnExitLayout.setVerticalGroup(
            btnExitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setFont(new java.awt.Font("Roboto Medium", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Ventana Productos");

        javax.swing.GroupLayout HeaderLayout = new javax.swing.GroupLayout(Header);
        Header.setLayout(HeaderLayout);
        HeaderLayout.setHorizontalGroup(
            HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 589, Short.MAX_VALUE)
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        HeaderLayout.setVerticalGroup(
            HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(HeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addContainerGap())
        );

        vent_Inicial_Productos1.add(Header, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 910, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(vent_Inicial_Productos1, javax.swing.GroupLayout.DEFAULT_SIZE, 910, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(vent_Inicial_Productos1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
   
    
     public void mostrarTipoProductos(){
        // cajaTipo.setDefaultEditor(Object.class, null);
        try{
           DefaultComboBoxModel<String> model = new DefaultComboBoxModel<String>();
        JComboBox<String> comboBox = new JComboBox<String>(model);
            conexionProductoAlmacen fun= new conexionProductoAlmacen();
            model = (DefaultComboBoxModel<String>) fun.mostrarTipoProducto();
            cajaTipo.setModel(model);
            
        } catch(Exception e){
            JOptionPane.showConfirmDialog(null,e.getMessage());
        }
        
    }
    
    
     public void mostrarUnidadProductos(){
        // cajaTipo.setDefaultEditor(Object.class, null);
        try{
           DefaultComboBoxModel<String> model = new DefaultComboBoxModel<String>();
        JComboBox<String> comboBox = new JComboBox<String>(model);
            conexionProductoAlmacen fun= new conexionProductoAlmacen();
            model = (DefaultComboBoxModel<String>) fun.mostrarUnidadProducto();
            cajaUnidad.setModel(model);
            
        } catch(Exception e){
            JOptionPane.showConfirmDialog(null,e.getMessage());
        }
        
    }
    
    
    public void mostrarRegistrantes(){
        // cajaTipo.setDefaultEditor(Object.class, null);
        try{
           DefaultComboBoxModel<String> model = new DefaultComboBoxModel<String>();
        JComboBox<String> comboBox = new JComboBox<String>(model);
            conexionProductoAlmacen fun= new conexionProductoAlmacen();
            model = (DefaultComboBoxModel<String>) fun.mostrarRegistrante();
            cajaRegistrante.setModel(model);
            
        } catch(Exception e){
            JOptionPane.showConfirmDialog(null,e.getMessage());
        }
        
        
      
        
        
        
        
    }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    private void btnSubirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSubirMouseEntered
        btnSubir.setBackground(new Color(33,33,33));
    }//GEN-LAST:event_btnSubirMouseEntered

    private void btnSubirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSubirMouseExited
        btnSubir.setBackground(new Color(204,204,204));
    }//GEN-LAST:event_btnSubirMouseExited

    private void btnSubirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubirActionPerformed
        //esto es para que al escoger el archivo se vea como el sistema de windows
      

        JFileChooser filechooser = new JFileChooser();
        FileNameExtensionFilter filtradoExtension = new FileNameExtensionFilter("JPG, PNG", "jpg", "png");
        filechooser.setFileFilter(filtradoExtension);

        if (filechooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            rutaImage = filechooser.getSelectedFile().getAbsolutePath();
            Image imagen = new ImageIcon(rutaImage).getImage(); //obtenemos la imagen de la ruta
            ImageIcon mIcono = new ImageIcon(imagen.getScaledInstance(cajafotoP.getWidth(), cajafotoP.getHeight(), 0)); //ajistamos la imagen a la caj donde se almacenara
            cajafotoP.setIcon(mIcono); //mostramos la imagen en la caja

        }

    }//GEN-LAST:event_btnSubirActionPerformed

    private void btnEliminarFotoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarFotoMouseEntered
        btnEliminarFoto.setBackground(new Color(33,33,33));

    }//GEN-LAST:event_btnEliminarFotoMouseEntered

    private void btnEliminarFotoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarFotoMouseExited
        btnEliminarFoto.setBackground(new Color(204,204,204));
    }//GEN-LAST:event_btnEliminarFotoMouseExited

    private void btnEliminarFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarFotoActionPerformed
        ImageIcon image = new ImageIcon(getClass().getResource("/Files/imagenProducto.png"));
        Icon icono = new ImageIcon(image.getImage().getScaledInstance(cajafotoP.getWidth(), cajafotoP.getHeight(), 0));
        cajafotoP.setIcon(icono);
        rutaImage="";
    }//GEN-LAST:event_btnEliminarFotoActionPerformed

    private void btnGuardarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMouseEntered
      btnGuardar.setBackground(new Color(255,255,255));
       btnGuardar.setForeground(new Color(0,0,0));
    }//GEN-LAST:event_btnGuardarMouseEntered

    private void btnGuardarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMouseExited
         
        btnGuardar.setBackground(new Color(0,0,0));
       btnGuardar.setForeground(new Color(255,255,255));
    }//GEN-LAST:event_btnGuardarMouseExited

    private void btnEliminarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseEntered
         btnEliminar.setBackground(new Color(255,255,255));
       btnEliminar.setForeground(new Color(0,0,0));
    }//GEN-LAST:event_btnEliminarMouseEntered

    private void btnEliminarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseExited
         btnEliminar.setBackground(new Color(0,0,0));
       btnEliminar.setForeground(new Color(255,255,255));
    }//GEN-LAST:event_btnEliminarMouseExited

    private void btnCalendarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalendarActionPerformed

         calendar.setVisible(!calendar.isVisible());
    }//GEN-LAST:event_btnCalendarActionPerformed

    private void calendarPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_calendarPropertyChange
        if (evt.getOldValue()!= null) {  //verificamos que hayamos escogido una fecha
             //damos un formato a la fecha
            
            cajaVencimiento.setText(formato.format(calendar.getCalendar().getTime()));
        }
    }//GEN-LAST:event_calendarPropertyChange

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
         if(cajaProducto.getText().length()==0) {//esta vacio
            JOptionPane.showConfirmDialog(null, "Ingrese nombre del producto","VENTANA DE INFORMACIÓN", JOptionPane.CLOSED_OPTION, JOptionPane.INFORMATION_MESSAGE);
            cajaProducto.requestFocus();
            return;
        }
        if(!expresiones.validarNombreProducto(cajaProducto.getText())){
            JOptionPane.showConfirmDialog(null, "Ingrese un nombre de producto correcto","VENTANA DE INFORMACIÓN", JOptionPane.CLOSED_OPTION, JOptionPane.INFORMATION_MESSAGE);
            cajaProducto.requestFocus();
            return;
        } 
        
         if((Integer)cajaCantidad.getValue()<0) {//esta vacio
            JOptionPane.showConfirmDialog(null, "Ingrese una cantidad mayor o igual a 0","VENTANA DE INFORMACIÓN", JOptionPane.CLOSED_OPTION, JOptionPane.INFORMATION_MESSAGE);
            cajaCantidad.requestFocus();
            return;
        }
         
         
         if(cajaPrCompra.getText().length()==0) {//esta vacio
            JOptionPane.showConfirmDialog(null, "Ingrese cantidad de compra del producto","VENTANA DE INFORMACIÓN", JOptionPane.CLOSED_OPTION, JOptionPane.INFORMATION_MESSAGE);
            cajaPrCompra.requestFocus();
            return;
        }
         
        if(!expresiones.validarPrecio(cajaPrCompra.getText())){
            JOptionPane.showConfirmDialog(null, "Ingrese un precio de compra de producto correcto","VENTANA DE INFORMACIÓN", JOptionPane.CLOSED_OPTION, JOptionPane.INFORMATION_MESSAGE);
            cajaPrCompra.requestFocus();
            return;
        } 
        
        if(cajaPrVenta.getText().length()==0) {//esta vacio
            JOptionPane.showConfirmDialog(null, "Ingrese cantidad de venta del producto","VENTANA DE INFORMACIÓN", JOptionPane.CLOSED_OPTION, JOptionPane.INFORMATION_MESSAGE);
            cajaPrVenta.requestFocus();
            return;
        }
         
        if(!expresiones.validarPrecio(cajaPrVenta.getText())){
            JOptionPane.showConfirmDialog(null, "Ingrese un precio de venta de producto correcto","VENTANA DE INFORMACIÓN", JOptionPane.CLOSED_OPTION, JOptionPane.INFORMATION_MESSAGE);
            cajaPrVenta.requestFocus();
            return;
        } 
        
        datosProductoAlmacen datos= new datosProductoAlmacen();
        conexionProductoAlmacen fun = new conexionProductoAlmacen();
        
        
        
        datos.setIdProducto(cajaId.getText());
        datos.setNombreProducto(cajaProducto.getText());
        datos.setCantidad((int)cajaCantidad.getValue());
        datos.setFechaRegistro(String.valueOf(LocalDate.now()));
        datos.setFechaVencimiento(cajaVencimiento.getText());
        datos.setPrecioCompra(new BigDecimal(cajaPrCompra.getText()));
        datos.setPrecioVenta(new BigDecimal(cajaPrVenta.getText()));
        
        
        String IdfTipo=fun.darIdTipo(cajaTipo.getSelectedItem().toString());
        if(IdfTipo==""){
            datos.setIdTipo("900000");
        } else {
            datos.setIdTipo(IdfTipo);
        }
        
        
        //.out.println(cajaUnidad.getSelectedItem().toString());
        String IdfUnidad= fun.darIdUnidad(cajaUnidad.getSelectedItem().toString());
        
        //System.out.println(IdfUnidad+ " ------------");
        if(IdfUnidad==""){
            datos.setIdUnidad("000000");
        } else {
            datos.setIdUnidad(IdfUnidad);
        }
        
        
        
        
        String idfRegistrante= fun.darIdRegistrante(cajaRegistrante.getSelectedItem().toString());
        if(idfRegistrante==""){
            datos.setIdPersonaRegistro("0010");
        } else {
            datos.setIdPersonaRegistro(idfRegistrante);
        }
        
           
           if(rutaImage!=""){
                  if(rutaImage=="hola"){
                    if(getOldImage()!=null){
                        datos.setFotoProducto(getOldImage());
                    } else {
                        datos.setFotoProducto(null);
                    }
                      
                  } else {
                       datos.setFotoProducto(getImage(rutaImage));
                  }
              
                 
              } else {
                  datos.setFotoProducto(null);
              }
             
           if(acciones=="crear"){
               fun.registrarDatos(datos);
                JOptionPane.showConfirmDialog(null, "Producto creado","VENTANA DE INFORMACIÓN", JOptionPane.CLOSED_OPTION, JOptionPane.INFORMATION_MESSAGE);
                
                
           } else {
               fun.editarDatos(datos);
                JOptionPane.showConfirmDialog(null, "Producto editado","VENTANA DE INFORMACIÓN", JOptionPane.CLOSED_OPTION, JOptionPane.INFORMATION_MESSAGE);
                 
           }
           acciones="guardar";
           rutaImage="";
           principalVentana= new Ventana_Principal();
                    setForm(principalVentana);
                  inventario= new Ventana_Inventario();
                setForm(inventario);  
                    
         
             
           
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
          datosProductoAlmacen datos= new datosProductoAlmacen();
        conexionProductoAlmacen fun = new conexionProductoAlmacen();
        
         if (fun.verificarRegistroExistente(cajaId.getText())==1){
            int confirmacion = JOptionPane.showConfirmDialog(rootPane, "Desea eliminar el producto?","Confirmar",2);
            if(confirmacion==0){
                    datos.setIdProducto(cajaId.getText());
                    fun.eliminarDatos(datos);
                    JOptionPane.showConfirmDialog(null, "Producto eliminado","VENTANA DE INFORMACIÓN", JOptionPane.CLOSED_OPTION, JOptionPane.INFORMATION_MESSAGE);
                    dispose();
                    principalVentana= new Ventana_Principal();
                    setForm(principalVentana); 
                    inventario= new Ventana_Inventario();
                    setForm(principalVentana);
                }
        }
        else {
             
             JOptionPane.showConfirmDialog(null, "No existe el producto","VENTANA DE INFORMACIÓN", JOptionPane.CLOSED_OPTION, JOptionPane.INFORMATION_MESSAGE);
        }
        
        
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void txtExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtExitMouseClicked
        dispose();
    }//GEN-LAST:event_txtExitMouseClicked

    private void txtExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtExitMouseEntered
        btnExit.setBackground(Color.red);
        txtExit.setForeground(Color.white);
    }//GEN-LAST:event_txtExitMouseEntered

    private void txtExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtExitMouseExited
        btnExit.setBackground(Color.white);
        txtExit.setForeground(Color.black);
    }//GEN-LAST:event_txtExitMouseExited

    private void HeaderMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HeaderMouseDragged
        int x = evt.getXOnScreen();//esto captura en todo momento donde se encuentra la ventana
        int y = evt.getYOnScreen();
        // este evento es cuando arrastramos la ventana por la pantalla
        this.setLocation(x-xMouse,y- yMouse);
    }//GEN-LAST:event_HeaderMouseDragged

    private void HeaderMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HeaderMousePressed
        xMouse = evt.getX(); //me da la posicion en el eje X de la ventana
        yMouse = evt.getY();//me da la posicion en el eje Y de la ventana
    }//GEN-LAST:event_HeaderMousePressed

    public static byte[] iconToBytes(ImageIcon icon) throws IOException {
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        try (ObjectOutputStream oos = new ObjectOutputStream(baos)) {
            oos.writeObject(icon);
            oos.flush();
        }
        return baos.toByteArray();
    }
    
    
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana_Productos_Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana_Productos_Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana_Productos_Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana_Productos_Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana_Productos_Registro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Header;
    private javax.swing.JButton btnCalendar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnEliminarFoto;
    private javax.swing.JPanel btnExit;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnSubir;
    private javax.swing.JSpinner cajaCantidad;
    private javax.swing.JTextField cajaId;
    private javax.swing.JTextField cajaPrCompra;
    private javax.swing.JTextField cajaPrVenta;
    private javax.swing.JTextField cajaProducto;
    private javax.swing.JComboBox<String> cajaRegistrante;
    private javax.swing.JComboBox<String> cajaTipo;
    private javax.swing.JComboBox<String> cajaUnidad;
    private javax.swing.JTextField cajaVencimiento;
    private javax.swing.JLabel cajafotoP;
    private com.toedter.calendar.JCalendar calendar;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel txtCantidad;
    private javax.swing.JLabel txtExit;
    private javax.swing.JLabel txtId;
    private javax.swing.JLabel txtPrCompra;
    private javax.swing.JLabel txtPrVenta;
    private javax.swing.JLabel txtProducto;
    private javax.swing.JLabel txtRegistrante;
    private javax.swing.JLabel txtTipo;
    private javax.swing.JLabel txtUnidad;
    private javax.swing.JLabel txtVencimiento;
    private CapaPresentacion.PaginaPrincipal.Ventanas.VentanasProductos.Vent_Inicial_Productos vent_Inicial_Productos1;
    // End of variables declaration//GEN-END:variables

    private void IniciarId() {
       cajaVencimiento.setText(formato.format(new Date()));
        calendar.setVisible(false);
        
         
         
          if (idProducto =="") {
            generarID();
        } else {
            conexionProductoAlmacen fun = new conexionProductoAlmacen();
            datosProductoAlmacen registro = fun.devolverDatos(idProducto);
            String NombreRegistrante="";
            String NombreTipo="";
            String NombreUnidad="";
            
            if(registro!= null) {
                cajaId.setText(registro.getIdProducto());
                cajaProducto.setText(registro.getNombreProducto());
                cajaCantidad.setValue(registro.getCantidad());
                
                
                 for(datosTipoProducto tipos: tipoProducto){
                    if(tipos.getIdTipo().equals(registro.getIdTipo())){
                        NombreTipo=tipos.getNombreTipo();
                    }
                }
               cajaTipo.setSelectedItem(NombreTipo);
               
               
                 for(datosUnidadProducto unidades: unidadProducto){
                    if(unidades.getIdUnidad().equals(registro.getIdUnidad())){
                        NombreUnidad=unidades.getNombreUnidad();
                    }
                }

                cajaUnidad.setSelectedItem(NombreUnidad);
                
                
                
                cajaVencimiento.setText(String.valueOf(registro.getFechaVencimiento()));
                cajaPrCompra.setText(String.valueOf(registro.getPrecioCompra()));
                cajaPrVenta.setText(String.valueOf(registro.getPrecioVenta()));
                
                
                for(datosPersonalCocina nombres: persona){
                   
                    if(nombres.getIdPersona().equals(registro.getIdPersonaRegistro())){
                     
                        NombreRegistrante=nombres.getNombre()+" "+nombres.getApellidoP()+" "+nombres.getApellidoM();
                        
                    }

                }
                
                cajaRegistrante.setSelectedItem(NombreRegistrante);
                
                
               
                
                try{
                    byte[] imagen = registro.getFotoProducto();
                    
                    BufferedImage bufferImage = null;
                  
                    InputStream inputstream = new ByteArrayInputStream(imagen);
                    
                    bufferImage = ImageIO.read(inputstream);
                    
                    ImageIcon nIcono = new ImageIcon(bufferImage.getScaledInstance(cajafotoP.getWidth(), cajafotoP.getHeight(), 0));
                   
                    cajafotoP.setIcon(nIcono);
                    
                    rutaImage="hola";
                } catch(Exception e){
                    sinFotoDePerfil();
                }
                
                
                
            }
        }
        idProducto="";
         
         
         
    
    }

    private void sinFotoDePerfil(){
                        ImageIcon image = new ImageIcon(getClass().getResource("/Files/imagenProducto.png"));
                        Icon icono = new ImageIcon(image.getImage().getScaledInstance(cajafotoP.getWidth(), cajafotoP.getHeight(), 0));
                       cajafotoP.setIcon(icono);
    }

    private void inhabilitar(){
        cajaId.setEnabled(false);
        cajaVencimiento.setEnabled(false);
        
    }

       private void generarID(){
        conexionProductoAlmacen fun= new conexionProductoAlmacen();
        DecimalFormat formato = new DecimalFormat("000000");
        cajaId.setText(formato.format(fun.generarIdProducto()));
         sinFotoDePerfil();
    }
       
        private byte [] getImage(String ruta){
        File imagen = new File (ruta);
        try {
            byte [] icono = new byte[(int) imagen.length()];
            InputStream input = new FileInputStream(imagen);
            input.read(icono);
            return icono;
        } catch(Exception e ){
            return null;
         }
    }
        
        private byte[] getOldImage() {
              try {
                   ImageIcon imageIcones = (ImageIcon) cajafotoP.getIcon();
                   Image imagen = imageIcones.getImage();
                   BufferedImage bufferedImage = new BufferedImage(
                                    imagen.getWidth(null),
                                    imagen.getHeight(null),
                                    BufferedImage.TYPE_INT_RGB);
                    Graphics g = bufferedImage.createGraphics();
                    g.drawImage(imagen, 0, 0, null);
                    g.dispose();
                     ByteArrayOutputStream baos = new ByteArrayOutputStream();
                        ImageIO.write(bufferedImage, "png", baos);
                        byte[] bytes = baos.toByteArray();
                        return bytes;
                        //datos.setFotoProducto(bytes);
                      } catch (IOException e) {
                             e.printStackTrace();
                             return null;
                        }
        
        }
      
      private void setForm(JComponent com){
                   containerVentanas.removeAll();
                    containerVentanas.add(com); ///TENER CUIDADO CON ESTO O MODIFICARLO, REVISAR BIEN, ES PARA VOLVER A PINTAR LAS VENTANAS EN CASO DE MODIFICACIONES
                    containerVentanas.repaint();
                    containerVentanas.revalidate();
    
    }
}
